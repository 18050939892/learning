component 目录名不对

应该是 components，这是全世界通用标准
todo 这些类型都可以去掉，可以他可以自动推导， atom<Array> -> atom
todo 你这种写法叫做 自定义 Hook，函数名的取名规则是 useXXX()
注：这个todo指的不是普通函数，而是返回数组的函数
todo 这里的 if else 本质上是可以完全优化掉的， 没有 if else 这种东西
这里是将if转换为切换序号
todo 这里的思路错了，主题切换和字体大小，完全可以直接写在标签上，然后 onMouseDown={item.onMethod} 也是直接写内联函数，一切都很自然
todo 这种一次性表达式需要内联在 标签里，直接铺上去，不要间接
保留数组，循环写在html代码中
todo useEffect 应该放在 useState useRef useAtom 的后面，保持整齐。 他一般是放在最后的，不要中间插一个 useEffect
todo 大部分情况下，不要声明一个空数组，然后再往里面加东西。
todo 学习一下 数据不可变 这个思想
todo 学习代码思想： 纯函数、不可变性、原子性
todo css className 的命名规范是 span-one，中划线连接
todo 尽量不要使用 for循环，使用 map 代替
todo 这里的表达式可以优化成 setScrolltop(document.documentElement.scrollTop >= 100 ? 30 : 85)
原本是简单的if语句
todo 这里的代码问题很大，思考一下能不能用 CSS 直接替换掉
这里使用flex布局+order解决排序问题
todo 学习一下 less 的语法，这里的选择器都可以变得很简洁
todo 仍然没有彻底理解 原子状态和衍生状态，简单来说，这里的改变主题色，只能使用一次 setXXX()，其他状态通过这个 xxx 属性衍生出来
只要用了超过1次set就必定是错的
todo 这里的 svg 应该给他取个名字， 不要用 SvgList[0] 这种方式引用，不然不知道是什么意思，不好维护
todo 遮罩层直接写在弹窗组件里，与弹窗内容并列，依靠fixed，四个方向全0，来实现固化阴影
todo 这个 scrollTop 没用，他官方完全没有靠 JS 去控制滚动条的位置，而是通过 CSS 控制的。包括 useEffect 全都可以删掉
这个用sticky实现，注意：当使用sticky时，开始sticky定位的元素需要有高度，不然sticky会无效
