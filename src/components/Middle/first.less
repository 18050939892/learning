.container {
    display: flex;
    flex-wrap: wrap;
}

.content{
    max-width:306.8px ;
}

/* 为所有布局定义换行辅助类 */
.break {
    flex-basis: 100%;
    height: 0;
}

/* === 第一种布局样式 === */
.layout-first {
    align-items: flex-start;
}

/* 定义第一行 */

// todo 我说的简化不是指把他弄成简写，然后还是有这些逻辑，而是从顶层思考，把这些逻辑全部消除掉。彻底归零
.layout-first [class^="title-"],
.layout-first [class^="content-"],
.layout-first [class^="break-"] {
    display: block;
}

.layout-first [class^="title-"] {
    width: 25%;
}

.layout-first [class^="content-"] {
    width: 75%;
}

/* 使用规律性设置顺序 */

// todo 我说的简化不是指把他弄成简写，然后还是有这些逻辑，而是从顶层思考，把这些逻辑全部消除掉。彻底归零
// todo 这里的思路很简单，通过数组分类，依次输出就行了，这些 CSS 要全部删掉，重新从顶层思考
.layout-first .title-0 { order: 1; }
.layout-first .content-0, .layout-first .content-1, .layout-first .content-2, .layout-first .content-4 { order: 2; }
.layout-first .break-1 { order: 3; }
.layout-first .title-1 { order: 4; }
.layout-first .content-8, .layout-first .content-6, .layout-first .content-7 { order: 5; }
.layout-first .break-2 { order: 6; }
.layout-first .title-2 { order: 7; }
.layout-first .content-9, .layout-first .content-10, .layout-first .content-13 { order: 8; }
.layout-first .break-3 { order: 9; }
.layout-first .title-3 { order: 10; }
.layout-first .content-3, .layout-first .content-11 { order: 11; }
.layout-first .break-4 { order: 12; }
.layout-first .title-4 { order: 13; }
.layout-first .content-5 { order: 14; }
.layout-first .break-5 { order: 15; }
.layout-first .title-5 { order: 16; }
.layout-first .content-12 { order: 17; }
.layout-first .break-6 { order: 18; }


